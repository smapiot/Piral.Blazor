@inject IComponentActivationService Activation
@inject IQueryParameterValueProvider QueryParameterValueProvider
@implements IDisposable

@foreach (var active in Activation.Components)
{
    <div id="@active.ReferenceId">
        <div style="display: contents">
            <DynamicComponent @ref="AddRef" Type="@active.Component" Parameters="@active.Args" />
        </div>
    </div>
}

@code {

private DynamicComponent AddRef
{
    get => null;
    set => QueryParameterValueProvider.ProvideQueryParameterValues(value.Type, value.Instance);
}

private void OnComponentsChanged(object sender, EventArgs e)
{
    StateHasChanged();
}

public void Dispose()
{
    Activation.ComponentsChanged -= OnComponentsChanged;
}

protected override void OnAfterRender(bool firstRender)
{
    if (firstRender)
    {
        Activation.ComponentsChanged += OnComponentsChanged;
    }

    base.OnAfterRender(firstRender);
}
}
